{"version":3,"sources":["common/helpers.ts","common/queries.ts","components/common/PokemonInfo.tsx","components/common/PokemonList.tsx","components/PokemonSearch.tsx","components/PokemonSelected.tsx","hooks/useLocalStorage.ts","components/PokemonHome.tsx","hooks/useAllPokemon.ts","hooks/useSelectedPokemon.ts","hooks/useSearchBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getPokemonNumber","pokemon","pokemon_details","pokemon_pokedex_number","POKEDEX_BY_GENERATION","gql","getEvolutionText","pokedexEntry","evolution_requirements","length","evolution_item","evolution_trigger","min_affection","min_beauty","min_evolution_level","min_happiness","required_gender","required_held_item","required_known_move","required_location","required_party_pokemon","required_party_type","requires_overworld_rain","returnString","evolution_item_name","evolution_trigger_details","name","required_party_pokemon_name","required_party_type_details","PokemonInfo","close","lookupPokedex","pokemonName","pokemon_name","pokedex_information","console","log","className","onClick","id","pokedex_name","evolutions","map","p","l","sort","p1","p2","index","array","PokemonList","pokedex","trimmedPokedex","selectedPokemon","toggleSelectedPokemon","pokemonNumber","PokemonListItem","key","checkbox","checked","get","n","find","e","useToggle","pokemonVisible","toggle","htmlFor","type","PokemonSearch","pokedexSearchResults","PokemonSelected","filter","useLocalStorage","initialValue","options","deserializer","useMemo","raw","value","JSON","parse","isBrowser","noop","Error","initializer","useRef","serializer","String","stringify","localStorageValue","localStorage","getItem","setItem","useState","current","state","setState","useLayoutEffect","set","useCallback","valOrFunc","newState","remove","removeItem","undefined","PokemonHome","generation_id","dex_name_like","useQuery","variables","loading","error","data","Array","from","useAllPokemon","Map","m","setSelectedPokemon","pokemon_number","oldMap","newVal","newMap","useSelectedPokemon","searchQuery","setSearchQuery","onType","target","toLowerCase","includes","displaySearchResults","shouldDisplaySearchResults","SearchBar","onFocus","onChange","placeholder","useSearchBar","props","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","cache","InMemoryCache","persistCache","storage","LocalStorageWrapper","window","client","ApolloClient","uri","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.f247afb0.chunk.js","sourcesContent":["import { PokemonDetails } from \"./types\";\n\nexport const getPokemonNumber = (pokemon: PokemonDetails) =>\n  pokemon.pokemon_details[0].pokemon_pokedex_number;\n","import { gql } from \"@apollo/client\";\n\nexport const POKEDEX_BY_GENERATION = gql`\n  query getOriginalDexPokemonByGeneration(\n    $generation_id: Int!\n    $dex_name_like: String!\n    $offset: Int\n    $limit: Int\n  ) {\n    pokemon: pokemon_v2_pokemonspecies(\n      where: {\n        pokemon_v2_pokemondexnumbers: {\n          pokemon_v2_pokedex: {\n            pokemon_v2_region: { id: { _eq: $generation_id } }\n            name: { _like: $dex_name_like }\n          }\n        }\n      }\n      order_by: { id: asc }\n      offset: $offset\n      limit: $limit\n    ) {\n      ...pokedex\n      ...evolution_requirements\n      ...evolution_chain\n    }\n  }\n\n  fragment pokedex on pokemon_v2_pokemonspecies {\n    pokemon_name: name\n    pokemon_details: pokemon_v2_pokemondexnumbers(\n      where: {\n        pokemon_v2_pokedex: {\n          pokemon_v2_region: { id: { _eq: $generation_id } }\n          name: { _like: $dex_name_like }\n        }\n      }\n    ) {\n      pokemon_pokedex_number: pokedex_number\n      pokedex_information: pokemon_v2_pokedex {\n        pokedex_name: name\n      }\n    }\n  }\n\n  fragment evolution_requirements on pokemon_v2_pokemonspecies {\n    evolution_requirements: pokemon_v2_pokemonevolutions {\n      min_evolution_level: min_level\n      min_affection\n      min_beauty\n      min_happiness\n      required_gender: pokemon_v2_gender {\n        name\n      }\n      required_known_move: pokemon_v2_move {\n        name\n      }\n      required_held_item: pokemonV2ItemByHeldItemId {\n        name\n      }\n      required_location: pokemon_v2_location {\n        name\n      }\n      evolution_item: pokemon_v2_item {\n        evolution_item_name: name\n      }\n      evolution_trigger: pokemon_v2_evolutiontrigger {\n        evolution_trigger_details: name\n      }\n      requires_overworld_rain: needs_overworld_rain\n      required_party_pokemon: pokemonV2PokemonspecyByPartySpeciesId {\n        required_party_pokemon_name: name\n      }\n      required_party_type: pokemonV2TypeByPartyTypeId {\n        required_party_type_details: name\n      }\n    }\n  }\n\n  fragment evolution_chain on pokemon_v2_pokemonspecies {\n    evolutions: pokemon_v2_evolutionchain {\n      pokemon: pokemon_v2_pokemonspecies(\n        where: {\n          pokemon_v2_pokemondexnumbers: {\n            pokemon_v2_pokedex: {\n              pokemon_v2_region: { id: { _eq: $generation_id } }\n              name: { _like: $dex_name_like }\n            }\n          }\n        }\n      ) {\n        ...pokedex\n      }\n    }\n  }\n`;\n","import { getPokemonNumber, PokedexEntryByGeneration } from \"../../common\";\nimport \"./PokemonInfo.css\";\n\nconst getEvolutionText = (pokedexEntry: PokedexEntryByGeneration) => {\n  const evolution_requirements = pokedexEntry.evolution_requirements;\n\n  if (!evolution_requirements || evolution_requirements.length === 0) {\n    return \"No evolution requirements.\";\n  }\n\n  const {\n    evolution_item,\n    evolution_trigger,\n    min_affection,\n    min_beauty,\n    min_evolution_level,\n    min_happiness,\n    required_gender,\n    required_held_item,\n    required_known_move,\n    required_location,\n    required_party_pokemon,\n    required_party_type,\n    requires_overworld_rain,\n  } = evolution_requirements![0];\n\n  let returnString = \"Evolution requirements: \";\n\n  if (evolution_item) {\n    returnString += ` Use a ${evolution_item.evolution_item_name}.`;\n  }\n  if (evolution_trigger) {\n    returnString += ` Requires a '${evolution_trigger.evolution_trigger_details}'.`;\n  }\n  if (min_affection) {\n    returnString += ` Requires a minimum affection of '${min_affection}'.`;\n  }\n  if (min_beauty) {\n    returnString += ` Requires a minimum beauty of '${min_beauty}'.`;\n  }\n  if (min_evolution_level) {\n    returnString += ` Requires a minimum level of '${min_evolution_level}'.`;\n  }\n  if (min_happiness) {\n    returnString += ` Requires a minimum happiness of '${min_happiness}'.`;\n  }\n  if (required_gender) {\n    returnString += ` Needs to be '${required_gender.name}'.`;\n  }\n  if (required_held_item) {\n    returnString += ` Needs to hold '${required_held_item.name}'.`;\n  }\n  if (required_known_move) {\n    returnString += ` Needs to know '${required_known_move.name}'.`;\n  }\n  if (required_location) {\n    returnString += ` Needs to be at '${required_location.name}'.`;\n  }\n  if (required_party_pokemon) {\n    returnString += ` Needs to have '${required_party_pokemon.required_party_pokemon_name}' in your party.`;\n  }\n  if (required_party_type) {\n    returnString += ` Needs to have a party of type '${required_party_type.required_party_type_details}'.`;\n  }\n  if (required_party_type) {\n    returnString += ` Needs to have a party with '${required_party_type.required_party_type_details}'.`;\n  }\n  if (requires_overworld_rain) {\n    returnString += ` Requires overworld rain.`;\n  }\n\n  return returnString;\n};\n\nexport default function PokemonInfo({\n  pokedexEntry,\n  close,\n  lookupPokedex,\n}: {\n  pokedexEntry: PokedexEntryByGeneration;\n  close: () => void;\n  lookupPokedex: (_: number) => PokedexEntryByGeneration | undefined;\n}) {\n  const pokemonName = pokedexEntry.pokemon_name;\n  const { pokedex_information, pokemon_pokedex_number } =\n    pokedexEntry.pokemon_details[0];\n  console.log({ pokedexEntry });\n  return (\n    <>\n      <div className=\"pop-up-card\">\n        <button className=\"close\" onClick={close}>\n          ❌\n        </button>\n\n        <h1 id=\"pokemonName\">{pokemonName}</h1>\n        <h2 id=\"pokemonNumber\">\n          #{pokemon_pokedex_number} in the {pokedex_information.pokedex_name}\n        </h2>\n\n        <div className=\"evolutions\">\n          {pokedexEntry.evolutions.pokemon\n            .map((p) => {\n              console.log({\n                p,\n                l: lookupPokedex(p.pokemon_details[0].pokemon_pokedex_number),\n              });\n              return p;\n            })\n            .map(getPokemonNumber)\n            .map((p) => {\n              console.log({ p, l: lookupPokedex(p) });\n              return lookupPokedex(p);\n            })\n            .sort((p1, p2) => getPokemonNumber(p1!) - getPokemonNumber(p2!))\n            .map((p, index, array) => (\n              <>\n                <p>\n                  <span>\n                    #{getPokemonNumber(p!)} - {p!.pokemon_name}\n                  </span>\n                  {index < array.length - 1 && (\n                    <p>\n                      <span>{getEvolutionText(array[index + 1]!)}</span>\n                    </p>\n                  )}\n                </p>\n              </>\n            ))}\n        </div>\n      </div>\n    </>\n  );\n}\n","import {\n  getPokemonNumber,\n  PokedexByGeneration,\n  SelectedPokemon,\n  ToggleSelectedPokemon,\n  PokedexEntryByGeneration,\n  LookupPokedex,\n} from \"../../common\";\nimport \"./PokemonList.css\";\nimport { useToggle } from \"react-use\";\nimport PokemonInfo from \"./PokemonInfo\";\n\ntype PokemonListType = {\n  pokedex: PokedexByGeneration;\n  trimmedPokedex?: PokedexByGeneration;\n  selectedPokemon: SelectedPokemon;\n  toggleSelectedPokemon: ToggleSelectedPokemon;\n};\n\nexport default function PokemonList({\n  pokedex,\n  trimmedPokedex,\n  selectedPokemon,\n  toggleSelectedPokemon,\n}: PokemonListType) {\n  return (\n    <>\n      <ol className=\"pokemonList\">\n        {(trimmedPokedex ?? pokedex).map((pokedexEntry) => {\n          const pokemonNumber = getPokemonNumber(pokedexEntry);\n          return (\n            <PokemonListItem\n              {...{\n                key: pokemonNumber,\n                pokedexEntry,\n                checkbox: () => toggleSelectedPokemon(pokemonNumber),\n                checked: selectedPokemon.get(pokemonNumber) ?? false,\n                lookupPokedex: (n) =>\n                  pokedex.find((e) => getPokemonNumber(e) === n),\n              }}\n            />\n          );\n        })}\n      </ol>\n    </>\n  );\n}\n\nfunction PokemonListItem({\n  pokedexEntry,\n  checkbox,\n  checked,\n  lookupPokedex,\n}: {\n  pokedexEntry: PokedexEntryByGeneration;\n  checkbox: () => void;\n  checked: boolean;\n  lookupPokedex: LookupPokedex;\n}) {\n  const pokemonNumber = getPokemonNumber(pokedexEntry);\n  const [pokemonVisible, toggle] = useToggle(false);\n\n  return (\n    <li className=\"pokemonListItem\" key={pokemonNumber}>\n      {pokemonVisible && (\n        <PokemonInfo {...{ pokedexEntry, close: toggle, lookupPokedex }} />\n      )}\n      <button onClick={toggle}>\n        #{pokemonNumber} - {pokedexEntry.pokemon_name}\n      </button>\n      <div className=\"checkbox-container\">\n        <label\n          className=\"checkbox-label\"\n          htmlFor={`addToPokeDex-${pokemonNumber}`}\n        >\n          {checked ? \"Remove.\" : \"Add.\"}\n        </label>\n        <input\n          className=\"addToPokeDex visually-hidden\"\n          type=\"checkbox\"\n          id={`addToPokeDex-${pokemonNumber}`}\n          onClick={checkbox}\n          checked={checked}\n        />\n        <div className=\"checkbox-visual-representation\" />\n      </div>\n    </li>\n  );\n}\n","import {\n  PokedexByGeneration,\n  SelectedPokemon,\n  ToggleSelectedPokemon,\n} from \"../common\";\nimport PokemonList from \"./common/PokemonList\";\n\ntype PokemonSearchType = {\n  pokedex: PokedexByGeneration;\n  pokedexSearchResults: PokedexByGeneration;\n  selectedPokemon: SelectedPokemon;\n  toggleSelectedPokemon: ToggleSelectedPokemon;\n};\n\nexport default function PokemonSearch({\n  pokedex,\n  pokedexSearchResults,\n  selectedPokemon,\n  toggleSelectedPokemon,\n}: PokemonSearchType) {\n  return (\n    <>\n      <p>\n        <span>Add missing Pokémon from your PokéDex here.</span>\n      </p>\n      <PokemonList\n        {...{\n          pokedex,\n          trimmedPokedex: pokedexSearchResults,\n          selectedPokemon,\n          toggleSelectedPokemon,\n        }}\n      />\n    </>\n  );\n}\n","import {\n  getPokemonNumber,\n  PokedexByGeneration,\n  SelectedPokemon,\n  ToggleSelectedPokemon,\n} from \"../common\";\nimport PokemonList from \"./common/PokemonList\";\n\ntype PokemonSelectedType = {\n  pokedex: PokedexByGeneration;\n  selectedPokemon: SelectedPokemon;\n  toggleSelectedPokemon: ToggleSelectedPokemon;\n};\nexport default function PokemonSelected({\n  pokedex,\n  selectedPokemon,\n  toggleSelectedPokemon,\n}: PokemonSelectedType) {\n  return (\n    <>\n      <PokemonList\n        {...{\n          pokedex,\n          trimmedPokedex: pokedex.filter((p) =>\n            selectedPokemon.get(getPokemonNumber(p))\n          ),\n          selectedPokemon,\n          toggleSelectedPokemon,\n        }}\n      />\n    </>\n  );\n}\n","import {\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useState,\n  useRef,\n  useLayoutEffect,\n  useMemo,\n} from \"react\";\nimport { isBrowser, noop } from \"react-use/lib/misc/util\";\n\n// todo remove this file once https://github.com/streamich/react-use/pull/2266 is bloody merged\n\ntype parserOptions<T> =\n  | {\n      raw: true;\n    }\n  | {\n      raw: false;\n      serializer: (value: T) => string;\n      deserializer: (value: string) => T;\n    };\n\nconst useLocalStorage = <T>(\n  key: string,\n  initialValue?: T,\n  options?: parserOptions<T>\n): [T | undefined, Dispatch<SetStateAction<T | undefined>>, () => void] => {\n  const deserializer = useMemo(\n    () =>\n      options\n        ? options.raw\n          ? (value: any) => value\n          : options.deserializer\n        : JSON.parse,\n    [options]\n  );\n\n  if (!isBrowser) {\n    return [initialValue as T, noop, noop];\n  }\n  if (!key) {\n    throw new Error(\"useLocalStorage key may not be falsy\");\n  }\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const initializer = useRef((key: string) => {\n    try {\n      const serializer = options\n        ? options.raw\n          ? String\n          : options.serializer\n        : JSON.stringify;\n\n      const localStorageValue = localStorage.getItem(key);\n      if (localStorageValue !== null) {\n        return deserializer(localStorageValue);\n      } else {\n        initialValue && localStorage.setItem(key, serializer(initialValue));\n        return initialValue;\n      }\n    } catch {\n      // If user is in private mode or has storage restriction\n      // localStorage can throw. JSON.parse and JSON.stringify\n      // can throw, too.\n      return initialValue;\n    }\n  });\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [state, setState] = useState<T | undefined>(() =>\n    initializer.current(key)\n  );\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useLayoutEffect(() => setState(initializer.current(key)), [key]);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const set: Dispatch<SetStateAction<T | undefined>> = useCallback(\n    (valOrFunc) => {\n      try {\n        const newState =\n          typeof valOrFunc === \"function\"\n            ? (valOrFunc as Function)(state)\n            : valOrFunc;\n        if (typeof newState === \"undefined\") return;\n        let value: string;\n\n        if (options)\n          if (options.raw)\n            if (typeof newState === \"string\") value = newState;\n            else value = JSON.stringify(newState);\n          else if (options.serializer) value = options.serializer(newState);\n          else value = JSON.stringify(newState);\n        else value = JSON.stringify(newState);\n\n        localStorage.setItem(key, value);\n        setState(deserializer(value));\n      } catch {\n        // If user is in private mode or has storage restriction\n        // localStorage can throw. Also JSON.stringify can throw.\n      }\n    },\n    [deserializer, key, options, state]\n  );\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const remove = useCallback(() => {\n    try {\n      localStorage.removeItem(key);\n      setState(undefined);\n    } catch {\n      // If user is in private mode or has storage restriction\n      // localStorage can throw.\n    }\n  }, [key, setState]);\n\n  return [state, set, remove];\n};\n\nexport default useLocalStorage;\n","import PokemonSearch from \"./PokemonSearch\";\nimport PokemonSelected from \"./PokemonSelected\";\nimport { useAllPokemon, useSelectedPokemon, useSearchBar } from \"../hooks\";\nimport \"./PokemonHome.css\";\n\nexport default function PokemonHome() {\n  const { generation_id, dex_name_like } = {\n    generation_id: 4,\n    dex_name_like: \"original%\",\n  };\n  // fetch pokemon list with current fetch status\n  const { pokedex, loading, error } = useAllPokemon({\n    generation_id,\n    dex_name_like,\n  });\n\n  // create selection map of each pokemon for adding/removing from pokedex\n  const { selectedPokemon, toggleSelectedPokemon } = useSelectedPokemon(\n    pokedex,\n    generation_id,\n    dex_name_like\n  );\n\n  // create search component, selected status, and search results\n  const { SearchBar, displaySearchResults, pokedexSearchResults } =\n    useSearchBar(pokedex);\n\n  if (error || loading) {\n    return (\n      <>\n        {SearchBar}\n        <div className=\"pokemonListMessage\">\n          <span>{error && \"Something went wrong :(\"}</span>\n          <span>{loading && \"Loading...\"}</span>\n        </div>\n      </>\n    );\n  }\n\n  if (displaySearchResults) {\n    const props = {\n      pokedex,\n      pokedexSearchResults,\n      selectedPokemon,\n      toggleSelectedPokemon,\n    };\n    return (\n      <>\n        {SearchBar}\n        <PokemonSearch {...props} />\n      </>\n    );\n  }\n\n  const props = { pokedex, selectedPokemon, toggleSelectedPokemon };\n  return (\n    <>\n      {SearchBar}\n      <PokemonSelected {...props} />\n    </>\n  );\n}\n","import { useQuery } from \"@apollo/client\";\nimport { useMemo } from \"react\";\nimport {\n  getPokemonNumber,\n  PokedexByGeneration,\n  POKEDEX_BY_GENERATION,\n} from \"../common\";\n\nexport default function useAllPokemon({\n  generation_id,\n  dex_name_like,\n}: {\n  generation_id: number;\n  dex_name_like: string;\n}) {\n  const { loading, error, data } = useQuery<{ pokemon: PokedexByGeneration }>(\n    POKEDEX_BY_GENERATION,\n    {\n      variables: {\n        generation_id,\n        dex_name_like,\n      },\n    }\n  );\n  const pokedex = useMemo(() => {\n    return loading || error\n      ? []\n      : Array.from(data!.pokemon).sort((p1, p2) => {\n          return getPokemonNumber(p1) - getPokemonNumber(p2);\n        });\n  }, [data, error, loading]);\n\n  return { pokedex, loading, error };\n}\n","import { useMemo } from \"react\";\nimport { useLocalStorage } from \"../hooks\";\nimport { PokedexByGeneration } from \"../common\";\n\nexport default function useSelectedPokemon(\n  pokedex: PokedexByGeneration,\n  generation_id: number,\n  dex_name_like: string\n) {\n  // todo make more efficient by manually triggering updates and not copying to new list\n  const [selectedPokemon, setSelectedPokemon] = useLocalStorage<\n    Map<number, boolean>\n  >(\n    `${generation_id}-${dex_name_like}`,\n    new Map(\n      pokedex.map((p) => [p.pokemon_details[0].pokemon_pokedex_number, false])\n    ),\n    {\n      raw: false,\n      serializer: (m) => JSON.stringify(Array.from(m)),\n      deserializer: (m) => new Map(JSON.parse(m)),\n    }\n  );\n\n  const toggleSelectedPokemon = useMemo(\n    () => (pokemon_number: number) => {\n      setSelectedPokemon((oldMap) => {\n        console.log({ oldMap, pokemon_number });\n        const oldVal = oldMap!.get(pokemon_number);\n        const newVal = !oldVal;\n        const newMap = new Map(oldMap!);\n        newMap.set(pokemon_number, newVal);\n        return newMap;\n      });\n    },\n    [setSelectedPokemon]\n  );\n\n  return {\n    selectedPokemon: selectedPokemon ?? new Map(),\n    toggleSelectedPokemon,\n  };\n}\n","import { useState, useMemo } from \"react\";\nimport { PokedexByGeneration } from \"../common\";\n\nexport default function useSearchBar(pokedex: PokedexByGeneration) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const onType = useMemo(\n    () =>\n      ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n        setSearchQuery(value);\n      },\n    [setSearchQuery]\n  );\n\n  const pokedexSearchResults = useMemo(\n    () =>\n      searchQuery.length === 0\n        ? pokedex\n        : pokedex.filter((pokedexEntry) =>\n            pokedexEntry.pokemon_name\n              .toLowerCase()\n              .includes(searchQuery.toLowerCase())\n          ),\n    [pokedex, searchQuery]\n  );\n\n  const [displaySearchResults, shouldDisplaySearchResults] = useState(false);\n\n  const SearchBar = (\n    <>\n      <div id=\"pokemonSearch\">\n        <input\n          onFocus={() => shouldDisplaySearchResults(true)}\n          onChange={onType}\n          placeholder=\"Search\"\n        />\n        <button onClick={() => shouldDisplaySearchResults(false)}>❌</button>\n      </div>\n    </>\n  );\n\n  return { SearchBar, displaySearchResults, pokedexSearchResults };\n}\n","import { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\nimport PokemonHome from \"./components/PokemonHome\";\n\nfunction App() {\n  return (\n    <main id=\"main\">\n      <Router>\n        <PokemonHome />\n      </Router>\n    </main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport { LocalStorageWrapper, persistCache } from \"apollo3-cache-persist\";\n\nconst cache = new InMemoryCache();\n\npersistCache({\n  cache,\n  storage: new LocalStorageWrapper(window.localStorage),\n}).then(() => {\n  const client = new ApolloClient({\n    uri: \"https://beta.pokeapi.co/graphql/v1beta\",\n    cache,\n  });\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}